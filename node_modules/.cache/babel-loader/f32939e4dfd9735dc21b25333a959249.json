{"ast":null,"code":"var _jsxFileName = \"/var/www/html/react-app/src/Form.js\";\nimport React, { Component } from 'react';\nimport { FormErrors } from './FormErrors';\nimport './Form.css';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserInput = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      formErrors: {\n        email: '',\n        password: ''\n      },\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    };\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let emailValid = this.state.emailValid;\n    let passwordValid = this.state.passwordValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      case 'password':\n        passwordValid = value.length >= 6;\n        fieldValidationErrors.password = passwordValid ? '' : ' is too short';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      passwordValid: passwordValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid && this.state.passwordValid\n    });\n  }\n\n  errorClass(error) {\n    return error.length === 0 ? '' : 'has-error';\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"demoForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel panel-default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group \".concat(this.errorClass(this.state.formErrors.email)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      type: \"email\",\n      required: true,\n      className: \"form-control\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group \".concat(this.errorClass(this.state.formErrors.password)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handleUserInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      disabled: !this.state.formValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Sign up\"));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/var/www/html/react-app/src/Form.js"],"names":["React","Component","FormErrors","Form","constructor","props","handleUserInput","e","name","target","value","setState","validateField","state","email","password","formErrors","emailValid","passwordValid","formValid","fieldName","fieldValidationErrors","match","length","validateForm","errorClass","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FormErrors } from './FormErrors';\nimport './Form.css';\n\nclass Form extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      formErrors: {email: '', password: ''},\n      emailValid: false,\n      passwordValid: false,\n      formValid: false\n    }\n  }\n\n  handleUserInput = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({[name]: value},\n      () => { this.validateField(name, value) });\n    }\n\n    validateField(fieldName, value) {\n      let fieldValidationErrors = this.state.formErrors;\n      let emailValid = this.state.emailValid;\n      let passwordValid = this.state.passwordValid;\n\n      switch(fieldName) {\n        case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n        case 'password':\n        passwordValid = value.length >= 6;\n        fieldValidationErrors.password = passwordValid ? '': ' is too short';\n        break;\n        default:\n        break;\n      }\n      this.setState({formErrors: fieldValidationErrors,\n        emailValid: emailValid,\n        passwordValid: passwordValid\n      }, this.validateForm);\n    }\n\n    validateForm() {\n      this.setState({formValid: this.state.emailValid && this.state.passwordValid});\n    }\n\n    errorClass(error) {\n      return(error.length === 0 ? '' : 'has-error');\n    }\n\n    render () {\n      return (\n        <form className=\"demoForm\">\n        <div className=\"panel panel-default\">\n        <FormErrors formErrors={this.state.formErrors} />\n        </div>\n        <div className={`form-group ${this.errorClass(this.state.formErrors.email)}`}>\n        <label htmlFor=\"email\">Email address</label>\n        <input type=\"email\" required className=\"form-control\" name=\"email\"\n        placeholder=\"Email\"\n        value={this.state.email}\n        onChange={this.handleUserInput}  />\n        </div>\n        <div className={`form-group ${this.errorClass(this.state.formErrors.password)}`}>\n        <label htmlFor=\"password\">Password</label>\n        <input type=\"password\" className=\"form-control\" name=\"password\"\n        placeholder=\"Password\"\n        value={this.state.password}\n        onChange={this.handleUserInput}  />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={!this.state.formValid}>Sign up</button>\n        </form>\n      )\n    }\n  }\n\n  export default Form;\n"]},"metadata":{},"sourceType":"module"}